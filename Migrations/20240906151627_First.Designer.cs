// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Net.Context;

#nullable disable

namespace Project.Net.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20240906151627_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Net.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = " Relive classic board games with our collection of vintage games. Enjoy hours of fun and family entertainment with games that have been enjoyed for generations.",
                            Name = "Toys & Games"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Indulge in the luxury of handmade soap, crafted with natural ingredients and essential oils. Our soaps are gentle on the skin and offer a delightful sensory experience.",
                            Name = " Beauty & Personal Care"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Create a truly unique and meaningful piece of jewelry with our personalized sterling silver necklaces. Choose from a variety of designs and customization options to create a necklace that's perfect for you.\r\n\r\n",
                            Name = " Jewelry "
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Boost your energy and focus with our organic matcha powder. This nutrient-rich green tea powder offers a natural and delicious way to enhance your health and well-being.\r\n\r\n",
                            Name = "Food & Beverage"
                        });
                });

            modelBuilder.Entity("Project.Net.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 4,
                            Description = " Our organic matcha powder is sourced from the highest quality tea leaves and is packed with antioxidants and amino acids. Enjoy a cup of matcha for a boost of energy and a calming effect.",
                            ImagePath = "",
                            Price = 250m,
                            Quantity = 50,
                            Title = "Organic Matcha Powder"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 3,
                            Description = "This personalized sterling silver necklace is crafted from high-quality sterling silver and features a customizable pendant with your choice of engraving. It's the perfect gift for any occasion.",
                            ImagePath = "",
                            Price = 300m,
                            Quantity = 40,
                            Title = "Silver Necklace"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "This handmade soap is crafted with all-natural ingredients, including shea butter, coconut oil, and essential oils. It's gentle on the skin and leaves it feeling soft and hydrated.",
                            ImagePath = "",
                            Price = 120m,
                            Quantity = 100,
                            Title = "Handmade Soap"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Description = "This vintage board game is a classic that's perfect for family game nights. It features simple rules, strategic gameplay, and hours of fun for all ages.",
                            ImagePath = "",
                            Price = 500m,
                            Quantity = 50,
                            Title = "Vintage Board Game"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            Description = "This personalized sterling silver bracelet is crafted from high-quality sterling silver and features a customizable pendant with your choice of engraving. It's the perfect gift for any occasion.",
                            ImagePath = "",
                            Price = 100m,
                            Quantity = 60,
                            Title = "Silver bracelet"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2,
                            Description = "This Moisturizer is crafted with all-natural ingredients, including shea butter, coconut oil, and essential oils. It's gentle on the skin and leaves it feeling soft and hydrated.",
                            ImagePath = "",
                            Price = 150m,
                            Quantity = 100,
                            Title = "Moisturizer"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            Description = "This scooter is a classic that's perfect for Kids. It features easy to use, strategic gameplay, and hours of fun for all ages.",
                            ImagePath = "",
                            Price = 500m,
                            Quantity = 50,
                            Title = "scooter"
                        });
                });

            modelBuilder.Entity("Project.Net.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 123,
                            Email = "Ahmed@gmail.com",
                            FirstName = "Ahmed",
                            LastName = "samy",
                            Password = "Ahmed123"
                        },
                        new
                        {
                            UserId = 124,
                            Email = "Tamer@gmail.com",
                            FirstName = "Omar",
                            LastName = "Tamer",
                            Password = "Omar124"
                        },
                        new
                        {
                            UserId = 125,
                            Email = "Nada@gmail.com",
                            FirstName = "Nada",
                            LastName = "Khaled",
                            Password = "Nada125"
                        },
                        new
                        {
                            UserId = 126,
                            Email = "Hend@gmail.com",
                            FirstName = "Hend",
                            LastName = "Fathi",
                            Password = "Hend126"
                        },
                        new
                        {
                            UserId = 127,
                            Email = "Ali@gmail.com",
                            FirstName = "Ali",
                            LastName = "Ahmed",
                            Password = "Ali127"
                        });
                });

            modelBuilder.Entity("Project.Net.Models.Product", b =>
                {
                    b.HasOne("Project.Net.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project.Net.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
